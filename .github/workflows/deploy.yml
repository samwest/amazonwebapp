name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 17
        uses: actions-setup-java@v2
        with:
          java-version: 17
          distribution: 'oracle'
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Docker Push
        env:
          REPO: amazonwebapp
        run: |
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=build/libs/\*.jar -t ${{secrets.DOCKER_USER}}/$REPO:latest .
          docker push ${{secrets.DOCKER_USER}}/$REPO

#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Setup Java
#        use: actions/setup-java@v3
#        with:
#          distribution: 'oracle'
#          java-version: '17'
#      - name: Build Project
#        run: ./gradlew build
#      - name: Login to docker hub
#        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
#      - name: Build docker image
#        run: docker build --build-arg JAR_FILE=build/libs/\*.jar -t swest152/amazonwebapp .
#      - name: Publish image to docker hub
#        run: docker push swest152/amazonwebapp
#    deploy:
#      needs: build
#      runs-on: [aws-ec2]
#      steps:
#        - name: Pull Image from docker
#          run: docker pull amazonwebapp:latest
#        - name: Delete old container
#          run: docker rm -f amazonwebapp-example-container amazonwebapp
#        - name: Run docker container
#          run: sudo docker run -p 80:8080 swest152/amazonwebapp repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures